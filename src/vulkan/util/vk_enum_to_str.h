/* Autogenerated file -- do not edit
 * generated by gen_enum_to_str.py
 *
 * Copyright Â© 2017 Intel Corporation
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
 */

#ifndef MESA_VK_ENUM_TO_STR_H
#define MESA_VK_ENUM_TO_STR_H

#include <vulkan/vulkan.h>

    const char * vk_VertexInputRate_to_str(VkVertexInputRate input);
    const char * vk_ViewportCoordinateSwizzleNV_to_str(VkViewportCoordinateSwizzleNV input);
    const char * vk_BlendOp_to_str(VkBlendOp input);
    const char * vk_StructureType_to_str(VkStructureType input);
    const char * vk_StencilOp_to_str(VkStencilOp input);
    const char * vk_DiscardRectangleModeEXT_to_str(VkDiscardRectangleModeEXT input);
    const char * vk_ObjectEntryTypeNVX_to_str(VkObjectEntryTypeNVX input);
    const char * vk_BorderColor_to_str(VkBorderColor input);
    const char * vk_Filter_to_str(VkFilter input);
    const char * vk_ImageTiling_to_str(VkImageTiling input);
    const char * vk_PolygonMode_to_str(VkPolygonMode input);
    const char * vk_AttachmentLoadOp_to_str(VkAttachmentLoadOp input);
    const char * vk_PipelineCacheHeaderVersion_to_str(VkPipelineCacheHeaderVersion input);
    const char * vk_FrontFace_to_str(VkFrontFace input);
    const char * vk_DescriptorType_to_str(VkDescriptorType input);
    const char * vk_CommandBufferLevel_to_str(VkCommandBufferLevel input);
    const char * vk_SharingMode_to_str(VkSharingMode input);
    const char * vk_Result_to_str(VkResult input);
    const char * vk_ImageLayout_to_str(VkImageLayout input);
    const char * vk_BlendFactor_to_str(VkBlendFactor input);
    const char * vk_ImageType_to_str(VkImageType input);
    const char * vk_IndirectCommandsTokenTypeNVX_to_str(VkIndirectCommandsTokenTypeNVX input);
    const char * vk_ValidationCheckEXT_to_str(VkValidationCheckEXT input);
    const char * vk_QueryType_to_str(VkQueryType input);
    const char * vk_Format_to_str(VkFormat input);
    const char * vk_DebugReportObjectTypeEXT_to_str(VkDebugReportObjectTypeEXT input);
    const char * vk_SubpassContents_to_str(VkSubpassContents input);
    const char * vk_DisplayEventTypeEXT_to_str(VkDisplayEventTypeEXT input);
    const char * vk_DeviceEventTypeEXT_to_str(VkDeviceEventTypeEXT input);
    const char * vk_RasterizationOrderAMD_to_str(VkRasterizationOrderAMD input);
    const char * vk_InternalAllocationType_to_str(VkInternalAllocationType input);
    const char * vk_SamplerMipmapMode_to_str(VkSamplerMipmapMode input);
    const char * vk_ColorSpaceKHR_to_str(VkColorSpaceKHR input);
    const char * vk_DescriptorUpdateTemplateTypeKHR_to_str(VkDescriptorUpdateTemplateTypeKHR input);
    const char * vk_SamplerAddressMode_to_str(VkSamplerAddressMode input);
    const char * vk_ComponentSwizzle_to_str(VkComponentSwizzle input);
    const char * vk_PipelineBindPoint_to_str(VkPipelineBindPoint input);
    const char * vk_LogicOp_to_str(VkLogicOp input);
    const char * vk_PresentModeKHR_to_str(VkPresentModeKHR input);
    const char * vk_PhysicalDeviceType_to_str(VkPhysicalDeviceType input);
    const char * vk_AttachmentStoreOp_to_str(VkAttachmentStoreOp input);
    const char * vk_PrimitiveTopology_to_str(VkPrimitiveTopology input);
    const char * vk_SystemAllocationScope_to_str(VkSystemAllocationScope input);
    const char * vk_IndexType_to_str(VkIndexType input);
    const char * vk_DynamicState_to_str(VkDynamicState input);
    const char * vk_DebugReportErrorEXT_to_str(VkDebugReportErrorEXT input);
    const char * vk_ImageViewType_to_str(VkImageViewType input);
    const char * vk_DisplayPowerStateEXT_to_str(VkDisplayPowerStateEXT input);
    const char * vk_CompareOp_to_str(VkCompareOp input);

#endif
